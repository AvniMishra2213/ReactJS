{"version":3,"sources":["App.module.css","logo.svg","Utils/ProductData.js","ProductPreview/ProductPreview.js","ProductDetails/ProductDetails.js","TopBar/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProductData","title","description","colorOptions","styleName","imageUrl","featureList","Object","freeze","ProductPreview","props","currentHour","Date","getHours","currentMinute","getMinutes","src","productPreviewImage","alt","ShowHeartbeat","className","classes","Heart","date","ProductDetails","data","map","item","pos","classArray","examples","position","push","Selectedexample","key","join","onClick","onClickPreviewChange","buttonList","classArrays","features","feautrePos","Selectedfeature","onClickFeatureChange","color","buy","alert","Topbar","App","state","productData","showHeartbeat","setState","updateHeart","nextState","nextProps","this","container","left","right","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d9a1d30d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Topbar\":\"App_Topbar__3Di13\",\"container\":\"App_container__3HVDf\",\"right\":\"App_right__1ve0r\",\"left\":\"App_left__VJlFd\",\"date\":\"App_date__HoQ3h\",\"Heart\":\"App_Heart__2LkXK\",\"beat\":\"App_beat__aKbMG\",\"colors\":\"App_colors__2b-iX\",\"examples\":\"App_examples__2Rzv2\",\"Selectedexample\":\"App_Selectedexample__1ZB-R\",\"features\":\"App_features__2qOZj\",\"Selectedfeature\":\"App_Selectedfeature__2arUQ\",\"buy\":\"App_buy__3qsJs\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const ProductData = {\r\n    title: 'FitBit 19 - The Smartest Watch',\r\n    description: 'Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor.',\r\n    colorOptions: [\r\n        {\r\n            styleName: 'Black Strap',\r\n            imageUrl: 'https://imgur.com/iOeUBV7.png'\r\n        },\r\n        {\r\n            styleName: 'Red Strap',\r\n            imageUrl: 'https://imgur.com/PTgQlim.png'\r\n        },\r\n        {\r\n            styleName: 'Blue Strap',\r\n            imageUrl: 'https://imgur.com/Mplj1YR.png'\r\n        },\r\n        {\r\n            styleName: 'Purple Strap',\r\n            imageUrl: 'https://imgur.com/xSIK4M8.png'\r\n        },\r\n    ],\r\n    featureList: [\r\n        \"Time\", \"Heart Rate\"\r\n    ]\r\n}\r\n\r\nObject.freeze(ProductData); //This line of code just makes your object as a constant. No values can be updated.\r\n\r\nexport default ProductData;","import React from 'react';\r\nimport classes from './../App.module.css'\r\n\r\nconst ProductPreview = (props) => {\r\n    const currentHour = new Date().getHours() > 9 ? new Date().getHours() : '0' + new Date().getHours()\r\n    const currentMinute = new Date().getMinutes() > 9 ? new Date().getMinutes() : '0' + new Date().getMinutes()\r\n    return (\r\n\r\n        <div>\r\n            <img src={props.productPreviewImage} alt=\"Band\"></img>\r\n            {\r\n                props.ShowHeartbeat ?\r\n                    <div className={classes.Heart}>\r\n                        <i className=\"fas fa-heartbeat\"></i>\r\n                        <p>78</p>\r\n                    </div>\r\n                    :\r\n\r\n                    <div className={classes.date}>{`${currentHour}:${currentMinute}`}</div>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProductPreview;","import React from 'react';\r\nimport classes from './../App.module.css'\r\n\r\nconst ProductDetails = (props) => {\r\n    const colorOptions = props.data.colorOptions.map((item, pos) => {\r\n        const classArray = [classes.examples]\r\n        if (pos === props.position) {\r\n            classArray.push(classes.Selectedexample)\r\n        }\r\n        return (\r\n            <img key={pos} className={classArray.join(' ')} src={item.imageUrl} alt={item.styleName} onClick={() => props.onClickPreviewChange(pos)}></img>\r\n        )\r\n    })\r\n    const buyNow = () => {\r\n        return alert(\"Item Purchased\")\r\n    }\r\n    const buttonList = props.data.featureList.map((item, pos) => {\r\n        const classArrays = [classes.features]\r\n        if (pos === props.feautrePos) {\r\n            classArrays.push(classes.Selectedfeature)\r\n        }\r\n        return (<button key={pos} className={classArrays.join(' ')} onClick={() => props.onClickFeatureChange(pos)}>{item}</button>)\r\n    })\r\n    return (\r\n        <div>\r\n            <h1>{props.data.title}</h1>\r\n            <p>{props.data.description}</p>\r\n            <h3 className={classes.color}>Select Color</h3>\r\n            <div>\r\n                {colorOptions}\r\n                {/* <img className={[classes.examples, classes.Selectedexample].join(' ')} src=\"https://imgur.com/iOeUBV7.png\" alt=\"Black Color\"></img>\r\n            <img className={classes.examples} src=\"https://imgur.com/PTgQlim.png\" alt=\"Red Color\"></img>\r\n            <img className={classes.examples} src=\"https://imgur.com/Mplj1YR.png\" alt=\"Blue Color\"></img>\r\n            <img className={classes.examples} src=\"https://imgur.com/xSIK4M8.png\" alt=\"Purple Color\"></img> */}\r\n            </div>\r\n            <h3 className={classes.color}>Features</h3>\r\n            <div>\r\n                {buttonList}\r\n                {/* <button className={[classes.features, classes.Selectedfeature].join(' ')}>Time</button>\r\n            <button className={classes.features}>Heart Rate</button> */}\r\n\r\n            </div>\r\n            <button className={classes.buy} onClick={buyNow} >Buy Now</button>\r\n        </div>)\r\n}\r\nexport default ProductDetails","import React from 'react';\r\nimport classes from './../App.module.css'\r\n\r\nconst Topbar = () => {\r\n    return (\r\n        <header className={classes.Topbar}>\r\n            <nav>\r\n                <img src=\"https://pngimg.com/uploads/amazon/amazon_PNG25.png\" alt=\"Amazon\"></img>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default Topbar;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport classes from './App.module.css'\nimport ProductData from './Utils/ProductData';\nimport ProductPreview from './ProductPreview/ProductPreview';\nimport ProductDetails from './ProductDetails/ProductDetails';\nimport Topbar from './TopBar/TopBar'\n\n\nclass App extends Component {\n  state = {\n    productData: ProductData,\n    position: 0,\n    feautrePos: 0,\n    showHeartbeat: false\n  };\n\n  onClickPreviewChange = (pos) => {\n    // const PreviewChange = this.state.productData.colorOptions[pos].imageUrl\n    this.setState({ position: pos })\n  }\n  onClickFeatureChange = (pos) => {\n    // const PreviewChange = this.state.productData.colorOptions[pos].imageUrl\n    // console.log(pos)\n    let updateHeart = false\n    if (pos === 1) {\n      updateHeart = true\n    }\n    this.setState({ feautrePos: pos, showHeartbeat: updateHeart })\n  }\n  shouldComponentUpdate(nextState, nextProps) {\n    if (nextState.position === this.state.position) {\n      return false\n    }\n    return true\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Topbar />\n        <div className={classes.container}>\n          <div className={classes.left}>\n            <ProductPreview ShowHeartbeat={this.state.showHeartbeat} productPreviewImage={this.state.productData.colorOptions[this.state.position].imageUrl}\n            />\n          </div>\n          <div className={classes.right}>\n            <ProductDetails feautrePos={this.state.feautrePos} onClickFeatureChange={this.onClickFeatureChange} data={this.state.productData} onClickPreviewChange={this.onClickPreviewChange} position={this.state.position} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}